{"ast":null,"code":"var _jsxFileName = \"/Users/d1ak8m5/gitprojects/react-starter-apps/voting/src/Languages.js\";\nimport React, { Component } from \"react\";\nimport Element from \"./Element\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Languages extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.incrementCount = async language => {\n      console.log(\"ive been clicked\", language);\n      await this.state.languages.forEach(lang => {\n        if (lang.name === language.name) {\n          this.setState({\n            languages: lang.voteCount + 1\n          });\n        }\n      });\n    };\n\n    this.state = {\n      languages: [{\n        name: \"Javascript\",\n        voteCount: 0\n      }, {\n        name: \"Python\",\n        voteCount: 0\n      }, {\n        name: \"Go\",\n        voteCount: 0\n      }, {\n        name: \"Java\",\n        voteCount: 0\n      }, {\n        name: \"Typescript\",\n        voteCount: 0\n      }, {\n        name: \"Ruby\",\n        voteCount: 0\n      }, {\n        name: \"Elixir\",\n        voteCount: 0\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"languages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languages\",\n          children: this.state.languages.map(language => /*#__PURE__*/_jsxDEV(Element, {\n            language: language,\n            incrementCount: this.incrementCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 63\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/d1ak8m5/gitprojects/react-starter-apps/voting/src/Languages.js"],"names":["React","Component","Element","Languages","incrementCount","language","console","log","state","languages","forEach","lang","name","setState","voteCount","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAM7CG,cAN6C,GAM5B,MAAMC,QAAN,IAAmB;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,QAAhC;AACA,YAAM,KAAKG,KAAL,CAAWC,SAAX,CAAqBC,OAArB,CAA6BC,IAAI,IAAI;AACvC,YAAGA,IAAI,CAACC,IAAL,KAAcP,QAAQ,CAACO,IAA1B,EAA+B;AAC3B,eAAKC,QAAL,CAAc;AAACJ,YAAAA,SAAS,EAAEE,IAAI,CAACG,SAAL,GAAgB;AAA5B,WAAd;AACH;AACJ,OAJK,CAAN;AAOH,KAf4C;;AAAA,SAiB7CN,KAjB6C,GAiBrC;AACJC,MAAAA,SAAS,EACL,CACI;AAAEG,QAAAA,IAAI,EAAE,YAAR;AAAsBE,QAAAA,SAAS,EAAE;AAAjC,OADJ,EAEI;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBE,QAAAA,SAAS,EAAE;AAA7B,OAFJ,EAGI;AAAEF,QAAAA,IAAI,EAAE,IAAR;AAAcE,QAAAA,SAAS,EAAE;AAAzB,OAHJ,EAII;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBE,QAAAA,SAAS,EAAE;AAA3B,OAJJ,EAKI;AAAEF,QAAAA,IAAI,EAAE,YAAR;AAAsBE,QAAAA,SAAS,EAAE;AAAjC,OALJ,EAMI;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBE,QAAAA,SAAS,EAAE;AAA3B,OANJ,EAOI;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBE,QAAAA,SAAS,EAAE;AAA7B,OAPJ;AAFA,KAjBqC;AAAA;;AA+B7CC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAEK,KAAKP,KAAL,CAAWC,SAAX,CAAqBO,GAArB,CAAyBX,QAAQ,iBAAI,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAEA,QAAnB;AAA6B,YAAA,cAAc,EAAE,KAAKD;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAArC;AAFL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AArD4C","sourcesContent":["import React, { Component } from \"react\";\nimport Element from \"./Element\";\n\nexport default class Languages extends Component {\n\n    /*componentDidMount(){\n        console.log(\"im here LANGUAGES\")\n    }*/\n\n    incrementCount = async(language) => {\n        console.log(\"ive been clicked\", language)\n        await this.state.languages.forEach(lang => {\n            if(lang.name === language.name){\n                this.setState({languages: lang.voteCount +1})\n            }\n        })\n        \n        \n    }\n\n    state = {\n        languages:\n            [\n                { name: \"Javascript\", voteCount: 0 },\n                { name: \"Python\", voteCount: 0 },\n                { name: \"Go\", voteCount: 0 },\n                { name: \"Java\", voteCount: 0 },\n                { name: \"Typescript\", voteCount: 0 },\n                { name: \"Ruby\", voteCount: 0 },\n                { name: \"Elixir\", voteCount: 0 }\n\n            ]\n    }\n\n    render() {\n\n        return (\n            <div className=\"list-group\">\n                <div className=\"languages\">\n                    <div className=\"languages\">\n\n                        {this.state.languages.map(language => <Element language={language} incrementCount={this.incrementCount}/>  )}\n                        \n                        \n                        \n                    </div>\n                </div>\n            </div>\n        )\n\n\n\n\n\n\n\n    }\n\n\n\n\n}"]},"metadata":{},"sourceType":"module"}